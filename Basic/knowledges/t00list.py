# 创建一个列表有三种方式：

# 方式一：（常用）
l1 = [1, 2, '太白']

# 方式二：（不常用）
l2 = list()  # 空列表
# l1 = list(iterable)  # 可迭代对象
l3 = list('123')
# ['1', '2', '3']

# 方式三：列表推导式（后面的课程会讲到）
l4 = [i for i in range(1,5)]
# [1, 2, 3, 4]

################# 切片
l5 = ['a', 'b', '太白', 3, 666]
print(l5[0])  # 'a'
print(l5[-1])  # 666
print(l5[1:3])  # ['b', '太白']
print(l5[:-1])  # ['a', 'b', '太白', 3]
print(l5[::2])  # ['a', '太白', 666]              # 没隔两个取一个
print(l5[::-1])  # [666, 3, '太白', 'b', 'a']     # 逆序
print(l5[:])    # 取全部，这是个深copy，新开一块内存

################## 增
# append 追加，给列表的最后面追加一个元素
l = [1, 2, 'a']
l.append(666)
# [1, 2, 'a', 666]

# insert  插入在列表的任意位置插入元素
l = [1, 2, 'a']
l.insert(1,'太白')
# [1, '太白', 2, 'a']

# extend  迭代着追加，在列表的最后面迭代着追加一组数据
l = [1, 2, 'a']
l.extend('太白a')
# [1, 2, 'a', '太', '白', 'a']

################ 删
# pop  通过索引删除列表中对应的元素，该方法有返回值，返回值为删除的元素
l = ['太白', 'alex', 'WuSir', '女神']
ret = l.pop(1)
print(ret,l) # alex ['太白', 'WuSir', '女神']

# remove  通过元素删除列表中该元素
l = ['太白', 'alex', 'WuSir', '女神']
l.remove('alex')
print(l) # ['太白', 'WuSir', '女神']

# clear 清空列表
l = ['太白', 'alex', 'WuSir', '女神']
l.clear()
print(l) # []

# del
#按照索引删除该元素
l = ['太白', 'alex', 'WuSir', '女神']
del l[2]
# ['太白', 'alex', '女神']

# 切片删除该元素
l = ['太白', 'alex', 'WuSir', '女神']
del l[1:]
# ['太白']

# 切片(步长)删除该元素
l = ['太白', 'alex', 'WuSir', '女神']
del l[::2]
# ['alex', '女神']

################# 改
# 按照索引改值
l = ['太白', 'alex', 'WuSir', '女神']
l[0] = '男神'
# ['男神', 'alex', 'WuSir', '女神']

# 按照切片改值(迭代着增加)
l = ['太白', 'alex', 'WuSir', '女神']
l[1:3] = 'abcdefg'
# ['太白', 'a', 'b', 'c', 'd', 'e', 'f', 'g', '女神']

# 按照切片(步长)改值(必须一一对应)
l = ['太白', 'alex', 'WuSir', '女神']
l[::2] = '对应'
# ['对', 'alex', '应', '女神']

################## 查
# count()
a = ["q","w","q","r","t","y"]
print(a.count("q"))
# 2

# index()
a = ["q","w","r","t","y"]
print(a.index("r"))

# sort  reverse
a = [2,1,3,4,5]
a.sort()# 他没有返回值，所以只能打印a
print(a)    # [1, 2, 3, 4, 5]
a.reverse()#他也没有返回值，所以只能打印a
print(a)    # [5, 4, 3, 2, 1]

################### 其他操作
# 列表运算，list对加减乘除操作做了重写，是对list的操作
l1 = [1, 2, 3]
l2 = [4, 5, 6]
print(l1+l2)  # [1, 2, 3, 4, 5, 6]      # 拼接
print(l1*3)  # [1, 2, 3, 1, 2, 3, 1, 2, 3]  # 复制
# 对numpy中的数据的运算操作是对其中的每个数据进行运算

# 列表嵌套
l1 = [1, 2, 'taibai', [1, 'WuSir', 3,]]